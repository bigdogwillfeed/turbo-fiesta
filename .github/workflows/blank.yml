# Renews TLS certificates on Azure Web Apps
# You'll need:
env:
# - A Service Principle (App Registration) with Website Contributor and Web Plan Contributor roles
#  - the Application ID of that principle
  application-id: 5d759f07-e4cc-4a1f-b646-b2e289b222ca
#  - the Tenant ID of the active directory the principle is in
  tenant-id: d828c29c-6770-492c-91d7-a10f91a876d5
#  - the secret for the principle (secrets.AZURE_SECRET)
# - CloudFlare as your DNS provider
#  - an API Key with Zone - DNS - Edit and Zone - Zone - Read (secrets.CLOUDFLARE_TOKEN)

name: "Let's Encrypt"

on: workflow_dispatch # runs manually. TODO: schedule

jobs:
  
  renew-certs:
    
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    
    - name: Set up our powershell modules
      run: |
        Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
        Install-Module -Name Posh-ACME -Scope CurrentUser
        Install-Module -Name Az -Scope CurrentUser
      shell: pwsh

    #  Might be valuable to stash the account details in the actions cache or in the repo (could seed locally one time)
    #  The environmental variable POSHACME_HOME might be useful for that approach
    #  Right now, this generates a new account each time it runs
    - name: Generate and bind the certificate
      run: |
        $pass = (Get-Random -Count 15 -InputObject ([char[]]'abcdefghijklmnopqrstuvwxyz')) -join ''
        $cert = New-PACertificate 'gerhart.me','*.gerhart.me' -AcceptTOS -DnsSleep 15 -PfxPass $pass -Verbose `
                -DnsPlugin Cloudflare -PluginArgs @{ CFTokenInsecure = '${{ secrets.CLOUDFLARE_TOKEN }}' }
        $azpw = ConvertTo-SecureString -String '${{ secrets.AZURE_SECRET }}' -AsPlainText -Force
        $cred = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList '${{ env.application-id }}', $azpw
        Connect-AzAccount -ServicePrincipal -Credential $cred -Tenant '${{ env.tenant-id }}'
        New-AzWebAppSSLBinding -WebAppName coral-bush -ResourceGroupName gerhart-me -Name coral-bush.gerhart.me -Verbose `
                -CertificateFilePath $cert.PfxFullChain -CertificatePassword $pass -SslState SniEnabled
        New-AzWebAppSSLBinding -WebAppName coral-bush -ResourceGroupName gerhart-me -Name *.gerhart.me -Verbose `
                -Thumbprint $cert.Thumbprint -SslState SniEnabled
        Remove-AzWebAppSSLBinding -WebAppName coral-bush -ResourceGroupName gerhart-me -Name gerhart.me -Verbose `
                -Force -DeleteCertificate $True
        New-AzWebAppSSLBinding -WebAppName coral-bush -ResourceGroupName gerhart-me -Name gerhart.me -Verbose `
                -Thumbprint $cert.Thumbprint -SslState SniEnabled
        Disconnect-AzAccount
      shell: pwsh
